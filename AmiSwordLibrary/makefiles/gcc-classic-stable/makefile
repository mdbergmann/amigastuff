# makefile for GNU make (automatically generated by makemake)
# NOTE: indent with TAB in GNU makefiles!

# paths are relative to the project directory (current directory during make)

EXE    = bin/gcc-classic-stable/AmiSwordLibrary
OBJDIR = o/gcc-classic-stable/

# compiler and linker

CFLAGS = -DEXCLUDEZLIB -DEXCLUDEBZIP2 -DEXCLUDEXZ

CCC = gcc $(CFLAGS)
CC = g++ $(CFLAGS)
LD = g++

# target 'all' (default target)

all : $(EXE)

$(OBJDIR)main.o : main.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)main.o main.cpp
$(OBJDIR)swlog.o : src/frontend/swlog.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swlog.o src/frontend/swlog.cpp
$(OBJDIR)swdisp.o : src/frontend/swdisp.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swdisp.o src/frontend/swdisp.cpp
$(OBJDIR)regex.o : src/utilfuns/regex.c
	$(CCC) $(shell gccprefs) -c -o $(OBJDIR)regex.o src/utilfuns/regex.c
$(OBJDIR)swbuf.o : src/utilfuns/swbuf.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swbuf.o src/utilfuns/swbuf.cpp
$(OBJDIR)utilstr.o : src/utilfuns/utilstr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)utilstr.o src/utilfuns/utilstr.cpp
$(OBJDIR)swobject.o : src/utilfuns/swobject.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swobject.o src/utilfuns/swobject.cpp
$(OBJDIR)roman.o : src/utilfuns/roman.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)roman.o src/utilfuns/roman.cpp
$(OBJDIR)swkey.o : src/keys/swkey.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swkey.o src/keys/swkey.cpp
$(OBJDIR)listkey.o : src/keys/listkey.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)listkey.o src/keys/listkey.cpp
$(OBJDIR)swkey.o : src/keys/versekey.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)versekey.o src/keys/versekey.cpp
$(OBJDIR)swmodule.o : src/modules/swmodule.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swmodule.o src/modules/swmodule.cpp
$(OBJDIR)rawverse.o : src/modules/common/rawverse.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)rawverse.o src/modules/common/rawverse.cpp
$(OBJDIR)swtext.o : src/modules/texts/swtext.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swtext.o src/modules/texts/swtext.cpp
$(OBJDIR)rawtext.o : src/modules/texts/rawtext/rawtext.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)rawtext.o src/modules/texts/rawtext/rawtext.cpp
$(OBJDIR)swoptfilter.o : src/modules/filters/swoptfilter.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swoptfilter.o src/modules/filters/swoptfilter.cpp
$(OBJDIR)swcacher.o : src/mgr/swcacher.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swcacher.o src/mgr/swcacher.cpp
$(OBJDIR)swsearchable.o : src/mgr/swsearchable.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swsearchable.o src/mgr/swsearchable.cpp
$(OBJDIR)swlocale.o : src/mgr/swlocale.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swlocale.o src/mgr/swlocale.cpp
$(OBJDIR)swconfig.o : src/mgr/swconfig.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swconfig.o src/mgr/swconfig.cpp
$(OBJDIR)filemgr.o : src/mgr/filemgr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)filemgr.o src/mgr/filemgr.cpp
$(OBJDIR)versificationmgr.o : src/mgr/versificationmgr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)versificationmgr.o src/mgr/versificationmgr.cpp
$(OBJDIR)localemgr.o : src/mgr/localemgr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)localemgr.o src/mgr/localemgr.cpp
$(OBJDIR)stringmgr.o : src/mgr/stringmgr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)stringmgr.o src/mgr/stringmgr.cpp
$(OBJDIR)swfiltermgr.o : src/mgr/swfiltermgr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swfiltermgr.o src/mgr/swfiltermgr.cpp
$(OBJDIR)swmgr.o : src/mgr/swmgr.cpp
	$(CC) $(shell gccprefs) -c -o $(OBJDIR)swmgr.o src/mgr/swmgr.cpp

OBJS = $(OBJDIR)main.o $(OBJDIR)utilstr.o $(OBJDIR)swobject.o $(OBJDIR)swlocale.o $(OBJDIR)roman.o \
$(OBJDIR)swlog.o $(OBJDIR)swdisp.o \
$(OBJDIR)swkey.o $(OBJDIR)listkey.o $(OBJDIR)versekey.o \
$(OBJDIR)swmodule.o $(OBJDIR)rawverse.o $(OBJDIR)swtext.o $(OBJDIR)rawtext.o \
$(OBJDIR)swoptfilter.o \
$(OBJDIR)swcacher.o $(OBJDIR)swbuf.o $(OBJDIR)swconfig.o $(OBJDIR)versificationmgr.o \
$(OBJDIR)swsearchable.o \
$(OBJDIR)filemgr.o $(OBJDIR)localemgr.o $(OBJDIR)stringmgr.o $(OBJDIR)swfiltermgr.o $(OBJDIR)swmgr.o

$(EXE) : $(OBJS)
	$(LD) $(OBJS) $(shell gccprefs) -o $(EXE)

# target 'clean'

clean:
	-delete $(EXE)
	-delete $(OBJDIR)\*.o
