Short:        Cubic IDE FreePascal Plugin
Author:       Manfred Bergmann
Uploader:     Manfred Bergmann
Type:         dev/misc
Version:      0.1.0
Architecture: generic
Distribution: Aminet
Requires:     Cubic IDE, FreePascal

Installation of the FreePascal Cubic-IDE plugin.

The plugin offers the following functionality:
- syntax highlighting based on the standard "generic.parser" provided by Cubic-IDE
- quick navigation of Pascal sources files ('.pas') in the right sidebar
- toolbar commands for 'compile', 'compile&run' and only 'run'

To install the plugin, copy the folders (etc, add-ons) in thew archive to your Cubic-IDE installation
into the assign 'golded:'.
This folder should already contain those folders.
The folder 'etc' and 'add-ons' in this archive only contain files related to the Pascal plugin and should not clash with any existing files.
But to make sure you should make backups of those folders.

When this is done you should start, or re-start Cubic-IDE.

When you open a Pascal source file (.pas) you should see the explorer in the right sidebar
and the toolbar buttons.
Also the source code should be syntax highlighted.
If it is not, make sure the syntax highlighting setting is attached to the Pascal plugin settings.
To check this:
- open the Cubic configuration (main menu "Extras"->"Customize...")
- there, open the "Filetypes" tab
- select and open the "Pascal" type
- select "Settings" ("Einstellungen")
(see screenshot "CubicIDE_Pascal_2.ilbm")

If there is no entry for "Colorcoding" ("Farbkodierung") you have to add it:
- select "Settings" entry and click the "+" sign at the bottom toolbar
- in the next window select and open the entry for "Colorcoding" ("Farbkodierung")
- there choose the "Pascal.syntax" entry
- comfirm by pressing "OK"
(see screenshot: "CubicIDE_Pascal_1.ilbm")
- back in the previous window, select "Save" ("Speichern")

Syntax highlighting should work now.


Some notes about compiling and your FreePascal installation.
The compiling script, which is called from the toolbar buttons, expects a "FreePascal:" assign to find the FreePascal compiler (fpc).
You may have to check the script (fpc_wrapper.rexx) and modify the "FPC" variable near the top of the script to match
your Free Pascal installation.
This script also works on MorphOS when this FPC variable was configured appropriately.

More notes about the compilation process using the fpc_wrapper script.
The script extracts the output name from the source file.
A source file named "foobar.pas" produces an executable called "foobar".
This is a predefined process in order to allow to "run" the binary without having specified the name of the executable.
However, it is possible to change the executable name if desired.
After the first compile the script will generate a ".fpcout-foobar" file within the folder where your source file resides.
The content of this file is actually the output file and can be changed.



Cheers

